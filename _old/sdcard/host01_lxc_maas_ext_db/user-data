#cloud-config
hostname: host01
fqdn: host01.lxd.bru.int.cleem.de

locale: "de_DE.UTF-8"
timezone: Europe/Berlin
keyboard: {layout: de, toggle: null, variant: ''}

chpasswd: { expire: false }
ssh_pwauth: false
password: secret

package_update: true
package_upgrade: true
packages:
  - openssh-server
  - snapd

final_message: "Cloud init is done.!"

users:
  - default
  - name: ubuntu
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDmlRbfaE4y7z1DcLi0ViI/qDyulpy5aSyJPyS/dUU0ZvUg5Wq/pK734Kv9T026jUysSPTk9uEFc6ZRjFyBcvAmBKr3pepRE3NIEMVaTf2eJ/E6Ipm7Z1yVDM30u7fNxP6kyup5AMWShYe52HQKZOhpV1+KFuE6RA4GJpt17nmfTF/jXf9qrbHY3CuufvE1wWsFhnQZKH2K2hi4OpytAUjdXJbHgjuzd6gkzKRy3DXS/wddU3rgKS9uja9HKVfuBB3DRixi8Y/hB0Ve3dw8WcFVxGhjE1zZmWJZQ93VBxQUBubMW2j5/I71hhbgE+dZ5jXhqK3ppz1HYW6FIdxt0IyCC/bUoPF9FV4MNtsNosz9lCjZcNVbAv7u+0nNKyL6AykptDekzL/mbuLy16EC7IiX6gm8Dud9VX9sRYflFM7kglVxdaFKcngIjnnumpk9WI8+4GY4ASgszAQk/dzl6JdiEtypHs2cyTzF0y29RTJQcHBiMMt0byJLFE4AutIp7jU= clemens@cknb.local
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash

ntp:
  servers: ['ptbtime1.ptb.de', 'ptbtime2.ptb.de', 'ptbtime3.ptb.de']

write_files:
  - path: /etc/sysctl.d/10-disable-ipv6.conf
    permissions: 0644
    owner: root
    content: |
      net.ipv6.conf.all.disable_ipv6=1
      net.ipv6.conf.default.disable_ipv6=1
      net.ipv6.conf.lo.disable_ipv6=1

  - path: /opt/cleem/seed/lxdseed.yml
    permissions: 0644
    owner: root
    content: |
      config:
        core.https_address: 192.168.2.1:8443
        core.trust_password: clemens
      networks: []
      storage_pools:
      - config:
          size: 80GB
        description: ""
        name: local
        driver: zfs
      profiles:
      - config: {}
        description: ""
        devices:
          eth0:
            name: eth0
            nictype: bridged
            parent: br0
            type: nic
          root:
            path: /
            pool: local
            type: disk
        name: default
      projects: []
      cluster:
        server_name: host01
        enabled: true
        member_config: []
        cluster_address: ""
        cluster_certificate: ""
        server_address: ""
        cluster_password: ""
        cluster_certificate_path: ""
        cluster_token: ""

  - path: /opt/cleem/seed/maas01-bru-lxc-profile.yml
    permissions: 0644
    owner: root
    content: |
      config:
        security.secureboot: "false"
        user.network-config: |
          version: 2
          ethernets:
            eth0:
              dhcp4: no
              dhcp6: no
              optional: true
              addresses: [192.168.2.100/24]
              gateway4: 192.168.2.254
              nameservers:
                addresses: [192.168.2.254]
        user.user-data: |
          #cloud-config
          hostname: maas01
          fqdn: maas01.maas.bru.int.cleem.de          

          locale: "de_DE.UTF-8"
          timezone: Europe/Berlin
          keyboard: {layout: de, toggle: null, variant: ''}          

          chpasswd: { expire: false }
          ssh_pwauth: false
          password: secret          

          package_update: true
          package_upgrade: true
          packages:
            - openssh-server
            - postgresql-client
            - snapd          

          final_message: "Cloud init is done.!"          

          users:
            - default
            - name: ubuntu
              ssh-authorized-keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDmlRbfaE4y7z1DcLi0ViI/qDyulpy5aSyJPyS/dUU0ZvUg5Wq/pK734Kv9T026jUysSPTk9uEFc6ZRjFyBcvAmBKr3pepRE3NIEMVaTf2eJ/E6Ipm7Z1yVDM30u7fNxP6kyup5AMWShYe52HQKZOhpV1+KFuE6RA4GJpt17nmfTF/jXf9qrbHY3CuufvE1wWsFhnQZKH2K2hi4OpytAUjdXJbHgjuzd6gkzKRy3DXS/wddU3rgKS9uja9HKVfuBB3DRixi8Y/hB0Ve3dw8WcFVxGhjE1zZmWJZQ93VBxQUBubMW2j5/I71hhbgE+dZ5jXhqK3ppz1HYW6FIdxt0IyCC/bUoPF9FV4MNtsNosz9lCjZcNVbAv7u+0nNKyL6AykptDekzL/mbuLy16EC7IiX6gm8Dud9VX9sRYflFM7kglVxdaFKcngIjnnumpk9WI8+4GY4ASgszAQk/dzl6JdiEtypHs2cyTzF0y29RTJQcHBiMMt0byJLFE4AutIp7jU= clemens@cknb.local
              sudo: ['ALL=(ALL) NOPASSWD:ALL']
              groups: sudo
              shell: /bin/bash          

          ntp:
            servers: ['ptbtime1.ptb.de', 'ptbtime2.ptb.de', 'ptbtime3.ptb.de']          

          write_files:
            - path: /etc/sysctl.d/10-disable-ipv6.conf
              permissions: 0644
              owner: root
              content: |
                net.ipv6.conf.all.disable_ipv6=1
                net.ipv6.conf.default.disable_ipv6=1
                net.ipv6.conf.lo.disable_ipv6=1

            - path: /opt/cleem/seed/init.sh
              permissions: 0755
              owner: root
              content: |
                #!/bin/bash
                echo ===== START: VM - INITCMD =====
                                
                MAAS_USER="admin"
                MAAS_PASSWORD="admin"
                MAAS_EMAIL="admin@maas.bru.int.cleem.de"
                MAAS_CLOUD_NAME="maas01"

                MAAS_DB_NAME="maas01-db"
                MAAS_DB_OWNER="admin"
                MAAS_DB_PASSWORD="admin"
                MAAS_DB_HOST="192.168.2.101"
                DB_CREATE="true"

                #DB_URL="maas-test-db:///"
                DB_URL="postgres://$MAAS_DB_OWNER:$MAAS_DB_PASSWORD@$MAAS_DB_HOST/$MAAS_DB_NAME"

                echo "INFO: Calling initmaas.sh"
                bash -c "/opt/cleem/seed/initmaas.sh $MAAS_USER $MAAS_PASSWORD $MAAS_EMAIL $DB_URL $DB_CREATE"

                echo "INFO: Calling initjuju.sh"
                bash -c "/opt/cleem/seed/initjuju.sh $MAAS_CLOUD_NAME $MAAS_USER"

                rm /etc/systemd/system/firstboot.service
                #rm -r /opt/cleem/seed
                echo ===== END: VM - INITCMD =====

            - path: /opt/cleem/seed/initmaas.sh
              permissions: 0755
              owner: root
              content: |
                #!/bin/bash
                echo ===== START: VM - INITMAAS =====
                CLOUD_USER="$1"
                CLOUD_PASSWORD="$2"
                EMAIL="$3"
                DB_URL="$4"
                DB_CREATE="$5"
                PORT=5240
                IP=$(hostname -I | head -n 1 | xargs)
                MAAS_URL="http://$IP:$PORT/MAAS"      

                until pg_isready -d $DB_URL ; do
                  echo >&2 "WARN: Postgres is unavailable - sleeping"
                  sleep 1
                done

                echo "INFO: Configuring MaaS $MAAS_URL"
                /snap/bin/maas init region+rack --enable-debug --maas-url $MAAS_URL --database-uri "$DB_URL"

                if [ "$DB_CREATE" = "true" ]; then

                    echo "INFO: Configuring User $CLOUD_USER $EMAIL"
                    /snap/bin/maas createadmin --username $CLOUD_USER --password $CLOUD_PASSWORD --email $EMAIL --ssh-import ''      

                else
                    echo "INFO: Using existing DB"
                fi  


                echo "INFO: MaaS status $MAAS_URL"
                /snap/bin/maas status

                echo ===== END: VM - INITMAAS =====

            - path: /opt/cleem/seed/initjuju.sh
              permissions: 0755
              owner: root
              content: |
                #!/bin/bash
                # ./initjuju.sh "maas01" "admin"
                echo ===== START: VM - INITJUJU =====

                CLOUD_NAME="$1"
                CLOUD_USER="$2"

                PORT=5240
                IP=$(hostname -I | head -n 1 | xargs)
                URL="http://$IP:$PORT/MAAS"      

                echo "INFO: $CLOUD_NAME - Getting API Key for $CLOUD_USER"      

                API_KEY=$(/snap/bin/maas apikey --username $CLOUD_USER)
                CONFIG_FILE="/opt/cleem/seed/juju-$CLOUD_NAME-cloud.yaml"
                CREDENTIAL_FILE="/opt/cleem/seed/juju-$CLOUD_NAME-creds.yaml"        

                echo "INFO: $CLOUD_NAME - Creating juju cloud config $CONFIG_FILE"        

                tee "$CONFIG_FILE" > /dev/null << EOF
                clouds:
                  $CLOUD_NAME:
                    type: maas
                    auth-types: [oauth1]
                    endpoint: $URL
                EOF

                echo "INFO: $CLOUD_NAME - Creating juju cloud credentials $CREDENTIAL_FILE"        

                tee "$CREDENTIAL_FILE" > /dev/null << EOF
                credentials:
                  $CLOUD_NAME:
                    anyuser:
                      auth-type: oauth1
                      maas-oauth: $API_KEY
                EOF

                echo "INFO: $CLOUD_NAME - Adding juju cloud config"
                /snap/bin/juju add-cloud --client -f $CONFIG_FILE $CLOUD_NAME        

                echo "INFO: $CLOUD_NAME - Adding juju cloud credentials"
                /snap/bin/juju add-credential --client -f $CREDENTIAL_FILE $CLOUD_NAME      

                echo ===== END: VM - INITJUJU =====

            - path: /etc/systemd/system/firstboot.service
              permissions: 0644
              owner: root
              content: |
                [Unit]
                Description=One time boot script
                [Service]
                Type=simple
                ExecStart=/opt/cleem/seed/init.sh
                [Install]
                WantedBy=multi-user.target

          bootcmd:
            - [ sh, -xc, "echo ===== START: VM - BOOTCMD =====" ]
            - [ mkdir, -p, /opt/cleem/seed ]
            - [ sh, -xc, "echo ===== END: VM - BOOTCMD =====" ]    
            
          runcmd:
            - [ sh, -xc, "echo ===== START: VM - RUNCMD =====" ]
            - [ /usr/bin/snap, install, maas ]
            #- [ /usr/bin/snap, install, maas-test-db]
            - [ /usr/bin/snap, install, juju, --classic ]
            - [ systemctl, daemon-reload ]
            - [ systemctl, enable, firstboot.service ]
            - [ sh, -xc, "echo ===== END: VM -RUNCMD =====" ]      

          power_state:
            mode: reboot          

      description: maas01_bru LXD profile
      devices:
        eth0:
          name: eth0
          nictype: bridged
          parent: br0
          type: nic
        root:
          path: /
          pool: local
          type: disk
      name: maas01
      used_by: []
      
  - path: /opt/cleem/seed/maas01-db-bru-lxc-profile.yml
    permissions: 0644
    owner: root
    content: |
      config:
        security.secureboot: "false"
        user.network-config: |
          version: 2
          ethernets:
            eth0:
              dhcp4: no
              dhcp6: no
              optional: true
              addresses: [192.168.2.101/24]
              gateway4: 192.168.2.254
              nameservers:
                addresses: [192.168.2.254]
        user.user-data: |
          #cloud-config
          hostname: maas01-db
          fqdn: maas01-db.maas.bru.int.cleem.de          

          locale: "de_DE.UTF-8"
          timezone: Europe/Berlin
          keyboard: {layout: de, toggle: null, variant: ''}          

          chpasswd: { expire: false }
          ssh_pwauth: false
          password: secret          

          package_update: true
          package_upgrade: true
          packages:
            - openssh-server
            - postgresql 
            - postgresql-contrib          

          final_message: "Cloud init is done.!"          

          users:
            - default
            - name: ubuntu
              ssh-authorized-keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDmlRbfaE4y7z1DcLi0ViI/qDyulpy5aSyJPyS/dUU0ZvUg5Wq/pK734Kv9T026jUysSPTk9uEFc6ZRjFyBcvAmBKr3pepRE3NIEMVaTf2eJ/E6Ipm7Z1yVDM30u7fNxP6kyup5AMWShYe52HQKZOhpV1+KFuE6RA4GJpt17nmfTF/jXf9qrbHY3CuufvE1wWsFhnQZKH2K2hi4OpytAUjdXJbHgjuzd6gkzKRy3DXS/wddU3rgKS9uja9HKVfuBB3DRixi8Y/hB0Ve3dw8WcFVxGhjE1zZmWJZQ93VBxQUBubMW2j5/I71hhbgE+dZ5jXhqK3ppz1HYW6FIdxt0IyCC/bUoPF9FV4MNtsNosz9lCjZcNVbAv7u+0nNKyL6AykptDekzL/mbuLy16EC7IiX6gm8Dud9VX9sRYflFM7kglVxdaFKcngIjnnumpk9WI8+4GY4ASgszAQk/dzl6JdiEtypHs2cyTzF0y29RTJQcHBiMMt0byJLFE4AutIp7jU= clemens@cknb.local
              sudo: ['ALL=(ALL) NOPASSWD:ALL']
              groups: sudo
              shell: /bin/bash          

          ntp:
            servers: ['ptbtime1.ptb.de', 'ptbtime2.ptb.de', 'ptbtime3.ptb.de']          

          write_files:
            - path: /etc/sysctl.d/10-disable-ipv6.conf
              permissions: 0644
              owner: root
              content: |
                net.ipv6.conf.all.disable_ipv6=1
                net.ipv6.conf.default.disable_ipv6=1
                net.ipv6.conf.lo.disable_ipv6=1

            - path: /opt/cleem/seed/init.sh
              permissions: 0755
              owner: root
              content: |
                #!/bin/bash
                echo ===== START: VM - INITCMD =====
                MAAS_DB_NAME="maas01-db"
                MAAS_DB_OWNER="admin"
                MAAS_PASSWD="admin"

                echo "INFO: Calling initpgdb.sh"
                bash -c "/opt/cleem/seed/initpgdb.sh $MAAS_DB_NAME $MAAS_DB_OWNER $MAAS_PASSWD"

                echo ===== END: VM - INITCMD =====
                rm /etc/systemd/system/firstboot.service
                #rm -r /opt/cleem/seed

            - path: /opt/cleem/seed/initpgdb.sh
              permissions: 0755
              owner: root
              content: |
                #!/bin/bash
                echo ===== START: VM - INITPGDB =====
                DB_NAME="$1"
                DB_OWNER="$2"
                PASSWD="$3"
                HBA_FILE="/etc/postgresql/12/main/pg_hba.conf"
                PG_CONF_FILE="/etc/postgresql/12/main/postgresql.conf"
                LISTEN_STRING="listen_addresses = '*'"

                function waitForPostgres(){
                  until sudo -u postgres psql -c '\l'; do
                      echo >&2 "WARN: Postgres is unavailable - sleeping"
                      sleep 1
                  done
                }

                function showStatus(){
                  
                  echo "INFO: Listing databases"
                  sudo -u postgres psql -c "\l"

                }

                waitForPostgres

                echo "INFO: Creating user $DB_OWNER"
                sudo -u postgres psql -c "CREATE USER $DB_OWNER WITH ENCRYPTED PASSWORD '$PASSWD'"
                echo "INFO: Creating database $DB_NAME"
                sudo -u postgres createdb -O "$DB_OWNER" "$DB_NAME"


                echo "INFO: Writing database HBA file $HBA_FILE"

                cat > "$HBA_FILE" <<EOL
                local   all             postgres                                peer
                local   all             all                                     peer
                host    all             all             ::1/128                 md5
                local   replication     all                                     peer
                host    replication     all             127.0.0.1/32            md5
                host    replication     all             ::1/128                 md5

                host    all             all             0.0.0.0/0             md5
                host    $DB_NAME      $DB_OWNER    0/0       md5
                EOL

                tail -2 $HBA_FILE

                echo "INFO: Writing database config file $PG_CONF_FILE"

                echo "$LISTEN_STRING" >> $PG_CONF_FILE

                echo "INFO: Stopping database"
                service postgresql stop

                echo "INFO: Starting database"
                service postgresql start

                waitForPostgres
                echo ===== END: VM - INITPGDB =====


            - path: /etc/systemd/system/firstboot.service
              permissions: 0644
              owner: root
              content: |
                [Unit]
                Description=One time boot script
                [Service]
                Type=simple
                ExecStart=/opt/cleem/seed/init.sh
                [Install]
                WantedBy=multi-user.target

          bootcmd:
            - [ sh, -xc, "echo ===== START: VM - BOOTCMD =====" ]
            - [ mkdir, -p, /opt/cleem/seed ]
            - [ sh, -xc, "echo ===== END: VM - BOOTCMD =====" ]    
            
          runcmd:
            - [ sh, -xc, "echo ===== START: VM - RUNCMD =====" ]
            - [ systemctl, daemon-reload ]
            - [ systemctl, enable, firstboot.service ]
            - [ sh, -xc, "echo ===== END: VM -RUNCMD =====" ]      

          power_state:
            mode: reboot          

      description: maas01-db LXD profile
      devices:
        eth0:
          name: eth0
          nictype: bridged
          parent: br0
          type: nic
        root:
          path: /
          pool: local
          type: disk
      name: maas01
      used_by: []

  - path: /opt/cleem/seed/init.sh
    permissions: 0755
    owner: root
    content: |
      #!/bin/bash
      echo ===== START: HOST - INITCMD =====
      LXD_SEED_FILE="/opt/cleem/seed/lxdseed.yml"
      VM_IMAGE="images:ubuntu/20.04/cloud"

      VM_MAAS_NAME="maas01"
      VM_MAAS_PROFILE_FILE="/opt/cleem/seed/maas01-bru-lxc-profile.yml"

      VM_DB_NAME="maas01-db"
      VM_DB_PROFILE_FILE="/opt/cleem/seed/maas01-db-bru-lxc-profile.yml"

      echo "INFO: Calling initlxd.sh for $LXD_SEED_FILE"
      bash -c "/opt/cleem/seed/initlxd.sh $LXD_SEED_FILE"

      echo "INFO: Calling initvm.sh for $VM_DB_NAME"
      bash -c "/opt/cleem/seed/initvm.sh $VM_DB_NAME $VM_DB_PROFILE_FILE $VM_IMAGE"

      echo "INFO: Calling initvm.sh for $VM_MAAS_NAME"      
      bash -c "/opt/cleem/seed/initvm.sh $VM_MAAS_NAME $VM_MAAS_PROFILE_FILE $VM_IMAGE"

      echo ===== END: HOST - INITCMD =====
      rm /etc/systemd/system/firstboot.service

  - path: /opt/cleem/seed/initlxd.sh
    permissions: 0755
    owner: root
    content: |
      #!/bin/bash
      echo ===== START: HOST - INITLXD =====
      LXD_SEED_FILE="$1"
      echo "INFO: Seeding LXD from $LXD_SEED_FILE"
      /snap/bin/lxd init --preseed < "$LXD_SEED_FILE"
      echo "INFO: Disabling LXD secureboot"
      /snap/bin/lxc profile set default security.secureboot false
      echo ===== END: HOST - INITLXD =====

  - path: /opt/cleem/seed/initvm.sh
    permissions: 0755
    owner: root
    content: |
      #!/bin/bash
      echo ===== START: HOST - INITVM =====
      VM_NAME="$1"
      VM_TEMPLATE_FILE="$2"
      VM_IMAGE="$3"
      VM_PROFILE_NAME="$VM_NAME-lxc-profile"

      echo "INFO: Creating LXD profile $VM_PROFILE_NAME"
      /snap/bin/lxc profile create "$VM_PROFILE_NAME"
      echo "INFO: Setting LXD profile $VM_PROFILE_NAME with content $2"
      /snap/bin/lxc profile edit "$VM_PROFILE_NAME" < "$VM_TEMPLATE_FILE"

      echo "INFO: Creating VM $VM_NAME with profile $VM_PROFILE_NAME"
      /snap/bin/lxc init "$VM_IMAGE" $VM_NAME -p $VM_PROFILE_NAME
      echo "INFO: Setting autostart for VM $VM_NAME with profile $VM_PROFILE_NAME"
      /snap/bin/lxc config set "$VM_NAME" boot.autostart true
      /snap/bin/lxc start "$VM_NAME"
      echo ===== END: HOST - INITVM =====

  - path: /etc/systemd/system/firstboot.service
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=One time boot script
      [Service]
      Type=simple
      ExecStart=/opt/cleem/seed/init.sh
      [Install]
      WantedBy=multi-user.target 

bootcmd:
  - [ sh, -xc, "echo ===== START: HOST - BOOTCMD =====" ]
  - [ mkdir, -p, /mnt/usb01 ]
  - [ mkdir, -p, /opt/cleem/seed ]
  - [ sh, -xc, "echo ===== END: HOST - BOOTCMD =====" ]

mounts:
  - [ /dev/disk/by-partuuid/8a04d377-8388-425d-905e-c14eab550c0b, /mnt/usb01, "vfat", "defaults,nofail,discard", "0", "0" ]

runcmd:
  - [ sh, -xc, "echo ===== START: HOST - RUNCMD =====" ]
  - [ systemctl, daemon-reload ]
  - [ systemctl, enable, firstboot.service ]
  - [ sh, -xc, "echo ===== END: HOST - RUNCMD =====" ]

power_state:
  mode: reboot